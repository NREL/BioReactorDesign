/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  12
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         leastSquares;
    grad(U)         cellLimited leastSquares 1;

}

divSchemes
{
    default                         none;

    div(phi,alpha.gas)              Gauss vanLeer;
    div(phi,alpha.liquid)            Gauss vanLeer;
    div(phir,alpha.liquid,alpha.gas) Gauss vanLeer;
    div(phir,alpha.gas,alpha.liquid) Gauss vanLeer;

    div(alphaRhoPhi,U)      Gauss linearUpwind grad(U);
    div(phi,U)              Gauss linearUpwind grad(U);

    "div\(alphaRhoPhi,(h|e)\)"  Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,Yi\)"       Gauss limitedLinear 1;
    "div\(alphaPhi.*,f.*\)"         Gauss limitedLinear 1;
    div(alphaRhoPhi,K)      Gauss limitedLinear 1;
    div(alphaRhoPhi,(p|rho)) Gauss limitedLinear 1;
    div(alphaRhoPhi,k)      Gauss limitedLinear 1;

    div((((alpha*rho)*nuEff)*dev2(T(grad(U))))) Gauss linear;
    
    div(phim,epsilonm) Gauss limitedLinear 1;
    div(phim,km) Gauss limitedLinear 1;
    div(alphaRhoPhi,epsilon) Gauss limitedLinear 1;
}

laplacianSchemes
{
    default         Gauss linear limited corrected 0.33;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited corrected 0.33;
}

wallDist
{
    method          Poisson;
    nRequired       true;
}


// ************************************************************************* //
