/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "$FOAM_CASE/constant/globalVars"

type interfaceCompositionPhaseChangeMultiphaseSystem;

phases (gas liquid);


gas
{
    type            multiComponentPhaseModel;//pureIsothermalPhaseModel;

    diameterModel   constant;

    constantCoeffs
    {
        d       3e-3;
    }
    residualAlpha   1e-6;
    Sc              0.7;
}


liquid
{
    type            reactingPhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               1e-4;
    }
    residualAlpha   1e-6;
}

populationBalanceCoeffs
{
    bubbles
    {
        continuousPhase liquid;

        coalescenceModels
        (
            LehrMilliesMewes{
               efficiency 4.695;
               uCrit 0.08;
               alphaMax 0.6;
            }
        );

        binaryBreakupModels
        ();

        breakupModels
        (
            Laakkonen {
                efficiency 13.83;
                daughterSizeDistributionModel Laakkonen;
            }

        );

        driftModels
        (
            densityChange{}
        );

        nucleationModels
        (
            reactionDriven
            {
                nucleationDiameter  3.0e-3;
                velocityGroup       gas;
                reactingPhase       liquid;
                dmdtf               phaseTransfer:dmidtf;
                specie              CH4;
            }
        );
    }
}

blending
{
    default
    {   
        type            linear;
        minFullyContinuousAlpha.gas 0.7;
        minPartlyContinuousAlpha.gas 0.3;
        minFullyContinuousAlpha.liquid 0.7;
        minPartlyContinuousAlpha.liquid 0.3;
    }
    heatTransfer
    {   
        type            linear;
        minFullyContinuousAlpha.gas 1;
        minPartlyContinuousAlpha.gas 0;
        minFullyContinuousAlpha.liquid 1;
        minPartlyContinuousAlpha.liquid 0;
    }
    massTransfer
    {
        $heatTransfer;
    }
}

surfaceTension
(
    (gas and liquid)
    {
        type            constant;
        sigma           $sigmaLiq;
    }
);

interfaceCompression
();

aspectRatio
(
    (gas in liquid)
    {
        type            Wellek;
    }
);


drag
(
    (gas in liquid)
    {
        //type           Grace; // Need to install the model available at https://github.com/NREL/BioReactorDesign
        type           IshiiZuber;
        residualRe 1e-3;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
    (gas in liquid)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }
);

// heatTransfer
// ();

heatTransfer.gas
(
    (gas in liquid)
    {
        type spherical;
        residualAlpha 1e-4;
    }

    (liquid in gas)
    {
        type RanzMarshall;
        residualAlpha 1e-4;
    }
);

heatTransfer.liquid
(
    (gas in liquid)
    {
        type RanzMarshall;
        residualAlpha 1e-4;
    }

    (liquid in gas)
    {
        type spherical;
        residualAlpha 1e-4;
    }
);

interfaceComposition.gas
();

interfaceComposition.liquid
(
    (liquid and gas)
    {
        type Henry;
        species ( CO2 H2 CH4 );
        k ( $He_CO2 $He_H2 $He_CH4 );
        Le $LeLiqMix;
    }
);

diffusiveMassTransfer.gas
();

diffusiveMassTransfer.liquid
(
    (gas in liquid)
    {
        //type Higbie; // Need to install the model available at https://github.com/NREL/BioReactorDesign
        type Frossling;
        Le $LeLiqMix;
    }

    (liquid in gas)
    {
        type spherical;
        Le 1.0; //not used for spherical
    }
);

phaseTransfer
(
    (gas in liquid)
    {
        type reactionDriven;
        reactingPhase liquid;
        targetPhase gas;
        species (CH4);
    }
);

lift
(
    (gas in liquid)
    {
        type            wallDamped;

        wallDamping
        {
            type        cosine;
            Cd          3.0;
        }

        lift
        {
            type        Tomiyama;

            swarmCorrection
            {
                type    none;
            }
        }
    }

);

wallLubrication
(
    (gas in liquid)
    {
        type            Antal;
        Cw1             -0.01;
        Cw2             0.05;
    }
);

turbulentDispersion
(
    (gas in liquid)
    {
        type            Burns;
        sigma           0.9;
    }
);

// ************************************************************************* //
