//--------------------------------*- C++ -*----------------------------------
// blockMesh :  Block mesh description file
//
// adapted from:
// http://www.cfd-online.com/Forums/openfoam-meshing-blockmesh/61796-help-could-anyone-post-simple-cylinder-mesh.html
//
// JJS, 1/8/16
//
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
FoamFile
{
  version  2.0;
  format   ascii;
  class dictionary;
  object blockMeshDict;
}
// ************************************






   convertToMeters 1;

      // outer cylinder diameter
     // outer cylinder length

      //  inner cylinder diameter
     //  inner cylinder length
      //  inner cylinder thickness
    //  inner cylinder offset from bottom
   
   
   
   
   
   
    //Width of middle square section
   
   
   

   
   

   
   

   
   
   
   
    //how many cells in the square section
    //how many cells from square section to perimeter
    //how many cells in the thickness
    // how many cells from top to bottom

   
   
   

   vertices
   (
    ( 0.625 0.0  0.625) // Vertex fiveoclock_sq1 = 0 
    (-0.625 0.0  0.625) // Vertex sevenoclock_sq1 = 1 
    (-0.625 0.0 -0.625) // Vertex elevenoclock_sq1 = 2 
    ( 0.625 0.0 -0.625) // Vertex oneoclock_sq1 = 3 

    ( 0.625 2.5  0.625) // Vertex fiveoclock_sq2 = 4 
    (-0.625 2.5  0.625) // Vertex sevenoclock_sq2 = 5 
    (-0.625 2.5 -0.625) // Vertex elevenoclock_sq2 = 6 
    ( 0.625 2.5 -0.625) // Vertex oneoclock_sq2 = 7 

    ( 0.625 22.5  0.625) // Vertex fiveoclock_sq3 = 8 
    (-0.625 22.5  0.625) // Vertex sevenoclock_sq3 = 9 
    (-0.625 22.5 -0.625) // Vertex elevenoclock_sq3 = 10 
    ( 0.625 22.5 -0.625) // Vertex oneoclock_sq3 = 11 

    ( 0.625 40  0.625) // Vertex fiveoclock_sq4 = 12 
    (-0.625 40  0.625) // Vertex sevenoclock_sq4 = 13 
    (-0.625 40 -0.625) // Vertex elevenoclock_sq4 = 14 
    ( 0.625 40 -0.625) // Vertex oneoclock_sq4 = 15 
   
    ( 1.76776695455285 0.0  1.76776695137989) // Vertex fiveoclock_c11 = 16 
    (-1.76776695455285 0.0  1.76776695137989) // Vertex sevenoclock_c11 = 17 
    (-1.76776695455285 0.0 -1.76776695137989) // Vertex elevenoclock_c11 = 18 
    ( 1.76776695455285 0.0 -1.76776695137989) // Vertex oneoclock_c11 = 19 

    ( 1.76776695455285 2.5  1.76776695137989) // Vertex fiveoclock_c12 = 20 
    (-1.76776695455285 2.5  1.76776695137989) // Vertex sevenoclock_c12 = 21 
    (-1.76776695455285 2.5 -1.76776695137989) // Vertex elevenoclock_c12 = 22 
    ( 1.76776695455285 2.5 -1.76776695137989) // Vertex oneoclock_c12 = 23 

    ( 1.76776695455285 22.5  1.76776695137989) // Vertex fiveoclock_c13 = 24 
    (-1.76776695455285 22.5 1.76776695137989) // Vertex sevenoclock_c13 = 25 
    (-1.76776695455285 22.5 -1.76776695137989) // Vertex elevenoclock_c13 = 26 
    ( 1.76776695455285 22.5 -1.76776695137989) // Vertex oneoclock_c13 = 27 

    ( 1.76776695455285 40  1.76776695137989) // Vertex fiveoclock_c14 = 28 
    (-1.76776695455285 40  1.76776695137989) // Vertex sevenoclock_c14 = 29 
    (-1.76776695455285 40 -1.76776695137989) // Vertex elevenoclock_c14 = 30 
    ( 1.76776695455285 40 -1.76776695137989) // Vertex oneoclock_c14 = 31 

    ( 0.883883477276424 0.0  0.883883475689945) // Vertex fiveoclock_c21 = 32 
    (-0.883883477276424 0.0  0.883883475689945) // Vertex sevenoclock_c21 = 33 
    (-0.883883477276424 0.0 -0.883883475689945) // Vertex elevenoclock_c21 = 34 
    ( 0.883883477276424 0.0 -0.883883475689945) // Vertex oneoclock_c21 = 35 

    ( 0.883883477276424 2.5  0.883883475689945) // Vertex fiveoclock_c22 = 36 
    (-0.883883477276424 2.5  0.883883475689945) // Vertex sevenoclock_c22 = 37 
    (-0.883883477276424 2.5 -0.883883475689945) // Vertex elevenoclock_c22 = 38 
    ( 0.883883477276424 2.5 -0.883883475689945) // Vertex oneoclock_c22 = 39 

    ( 0.883883477276424 22.5  0.883883475689945) // Vertex fiveoclock_c23 = 40 
    (-0.883883477276424 22.5  0.883883475689945) // Vertex sevenoclock_c23 = 41 
    (-0.883883477276424 22.5 -0.883883475689945) // Vertex elevenoclock_c23 = 42 
    ( 0.883883477276424 22.5 -0.883883475689945) // Vertex oneoclock_c23 = 43 

    ( 0.883883477276424 40  0.883883475689945) // Vertex fiveoclock_c24 = 44 
    (-0.883883477276424 40  0.883883475689945) // Vertex sevenoclock_c24 = 45 
    (-0.883883477276424 40 -0.883883475689945) // Vertex elevenoclock_c24 = 46 
    ( 0.883883477276424 40 -0.883883475689945) // Vertex oneoclock_c24 = 47 

    ( 0.954594155458538 0.0  0.95459415374514) // Vertex fiveoclock_ct1 = 48 
    (-0.954594155458538 0.0  0.95459415374514) // Vertex sevenoclock_ct1 = 49 
    (-0.954594155458538 0.0 -0.95459415374514) // Vertex elevenoclock_ct1 = 50 
    ( 0.954594155458538 0.0 -0.95459415374514) // Vertex oneoclock_ct1 = 51 

    ( 0.954594155458538 2.5  0.95459415374514) // Vertex fiveoclock_ct2 = 52 
    (-0.954594155458538 2.5  0.95459415374514) // Vertex sevenoclock_ct2 = 53 
    (-0.954594155458538 2.5 -0.95459415374514) // Vertex elevenoclock_ct2 = 54 
    ( 0.954594155458538 2.5 -0.95459415374514) // Vertex oneoclock_ct2 = 55 

    ( 0.954594155458538 22.5  0.95459415374514) // Vertex fiveoclock_ct3 = 56 
    (-0.954594155458538 22.5  0.95459415374514) // Vertex sevenoclock_ct3 = 57 
    (-0.954594155458538 22.5 -0.95459415374514) // Vertex elevenoclock_ct3 = 58 
    ( 0.954594155458538 22.5 -0.95459415374514) // Vertex oneoclock_ct3 = 59 

    ( 0.954594155458538 40  0.95459415374514) // Vertex fiveoclock_ct4 = 60 
    (-0.954594155458538 40  0.95459415374514) // Vertex sevenoclock_ct4 = 61 
    (-0.954594155458538 40 -0.95459415374514) // Vertex elevenoclock_ct4 = 62 
    ( 0.954594155458538 40 -0.95459415374514) // Vertex oneoclock_ct4 = 63 

   );				

   blocks
   (
    //square blocks
    hex (
       1 0 3 2
       5 4 7 6
       )
    (12 12 18)
    simpleGrading (1 1 1)

    hex (
       5 4 7 6
       9 8 11 10
       )
    (12 12 150)
    simpleGrading (1 1 1)

    hex (
       9 8 11 10
       13 12 15 14
       )
    (12 12 132)
    simpleGrading (1 1 1)

    //slices (outer to thickness)*************************************

    // 1 to 2=========================================================
    //slice1
    hex (
       17 16 48 49
       21 20 52 53
       )
    (12 14 18)
    simpleGrading (1 1 1)

    //slice2
    hex (
       18 17 49 50
       22 21 53 54
       )
   (12 14 18)
simpleGrading (1 1 1)

   //slice3
   hex (
         19 18 50 51
         23 22 54 55
       )
   (12 14 18)
simpleGrading (1 1 1)

   //slice4
   hex (
         16 19 51 48
         20 23 55 52
       )
   (12 14  18)
simpleGrading (1 1 1)
   //====================================================================
    
   // 2 to 3=========================================================
    //slice1
    hex (
       21 20 52 53
       25 24 56 57
       )
    (12 14 150)
    simpleGrading (1 1 1)

    //slice2
    hex (
       22 21 53 54
       26 25 57 58
       )
   (12 14 150)
simpleGrading (1 1 1)

   //slice3
   hex (
         23 22 54 55
         27 26 58 59
       )
   (12 14 150)
simpleGrading (1 1 1)

   //slice4
   hex (
         20 23 55 52
         24 27 59 56
       )
   (12 14  150)
simpleGrading (1 1 1)
   //====================================================================

   // 3 to 4=========================================================
    //slice1
    hex (
       25 24 56 57
       29 28 60 61
       )
    (12 14 132)
    simpleGrading (1 1 1)

    //slice2
    hex (
       26 25 57 58
       30 29 61 62
       )
   (12 14 132)
simpleGrading (1 1 1)

   //slice3
   hex (
         27 26 58 59
         31 30 62 63
       )
   (12 14 132)
simpleGrading (1 1 1)

   //slice4
   hex (
         24 27 59 56
         28 31 63 60
       )
   (12 14  132)
simpleGrading (1 1 1)
   //====================================================================

    //slices (inner to square)*************************************

    // 1 to 2=========================================================
    //slice1
    hex (
       33 32 0 1
       37 36 4 5
       )
    (12 14 18)
    simpleGrading (1 1 1)

    //slice2
    hex (
       34 33 1 2
       38 37 5 6
       )
   (12 14 18)
simpleGrading (1 1 1)

   //slice3
   hex (
         35 34 2 3
         39 38 6 7
       )
   (12 14 18)
simpleGrading (1 1 1)

   //slice4
   hex (
         32 35 3 0
         36 39 7 4
       )
   (12 14  18)
simpleGrading (1 1 1)
   //====================================================================

    // 2 to 3=========================================================
    //slice1
    hex (
       37 36 4 5
       41 40 8 9
       )
    (12 14 150)
    simpleGrading (1 1 1)

    //slice2
    hex (
       38 37 5 6
       42 41 9 10
       )
   (12 14 150)
simpleGrading (1 1 1)

   //slice3
   hex (
         39 38 6 7
         43 42 10 11
       )
   (12 14 150)
simpleGrading (1 1 1)

   //slice4
   hex (
         36 39 7 4
         40 43 11 8
       )
   (12 14  150)
simpleGrading (1 1 1)
   //====================================================================

    // 3 to 4=========================================================
    //slice1
    hex (
       41 40 8 9
       45 44 12 13
       )
    (12 14 132)
    simpleGrading (1 1 1)

    //slice2
    hex (
       42 41 9 10
       46 45 13 14
       )
   (12 14 132)
simpleGrading (1 1 1)

   //slice3
   hex (
         43 42 10 11
         47 46 14 15
       )
   (12 14 132)
simpleGrading (1 1 1)

   //slice4
   hex (
         40 43 11 8
         44 47 15 12
       )
   (12 14  132)
simpleGrading (1 1 1)
   //====================================================================


    //slices (thickness to inner)*************************************

    // 1 to 2=========================================================
    //slice1
    hex (
       49 48 32 33
       53 52 36 37
       )
    (12 2 18)
    simpleGrading (1 1 1)

    //slice2
    hex (
       50 49 33 34
       54 53 37 38
       )
   (12 2 18)
simpleGrading (1 1 1)

   //slice3
   hex (
         51 50 34 35
         55 54 38 39
       )
   (12 2 18)
simpleGrading (1 1 1)

   //slice4
   hex (
         48 51 35 32
         52 55 39 36
       )
   (12 2  18)
simpleGrading (1 1 1)
   //====================================================================

    // 3 to 4=========================================================
    //slice1
    hex (
       57 56 40 41
       61 60 44 45
       )
    (12 2 132)
    simpleGrading (1 1 1)

    //slice2
    hex (
       58 57 41 42
       62 61 45 46
       )
   (12 2 132)
simpleGrading (1 1 1)

   //slice3
   hex (
         59 58 42 43
         63 62 46 47
       )
   (12 2 132)
simpleGrading (1 1 1)

   //slice4
   hex (
         56 59 43 40
         60 63 47 44
       )
   (12 2  132)
simpleGrading (1 1 1)
   //====================================================================

   );


   //create the quarter circles
   edges
   (
    arc 16 17   (0.0 0.0 2.5)
    arc 17 18 (-2.5 0.0 0.0)
    arc 18 19   (0.0 0.0 -2.5)
    arc 19 16     (2.5 0.0 0.0)

    arc 20 21   (0.0 2.5 2.5)
    arc 21 22 (-2.5 2.5 0.0)
    arc 22 23   (0.0 2.5 -2.5)
    arc 23 20     (2.5  2.5 0.0)
    
    arc 24 25   (0.0 22.5 2.5)
    arc 25 26 (-2.5 22.5 0.0)
    arc 26 27   (0.0 22.5 -2.5)
    arc 27 24     (2.5  22.5 0.0)

    arc 28 29   (0.0 40 2.5)
    arc 29 30 (-2.5 40 0.0)
    arc 30 31   (0.0 40 -2.5)
    arc 31 28     (2.5  40 0.0)

    arc 32 33   (0.0 0.0 1.25)
    arc 33 34 (-1.25 0.0 0.0)
    arc 34 35   (0.0 0.0 -1.25)
    arc 35 32     (1.25 0.0 0.0)

    arc 36 37   (0.0 2.5 1.25)
    arc 37 38 (-1.25 2.5 0.0)
    arc 38 39   (0.0 2.5 -1.25)
    arc 39 36     (1.25  2.5 0.0)
    
    arc 40 41   (0.0 22.5 1.25)
    arc 41 42 (-1.25 22.5 0.0)
    arc 42 43   (0.0 22.5 -1.25)
    arc 43 40     (1.25  22.5 0.0)

    arc 44 45   (0.0 40 1.25)
    arc 45 46 (-1.25 40 0.0)
    arc 46 47   (0.0 40 -1.25)
    arc 47 44     (1.25  40 0.0)

    arc 48 49   (0.0 0.0 1.35)
    arc 49 50 (-1.35 0.0 0.0)
    arc 50 51   (0.0 0.0 -1.35)
    arc 51 48     (1.35 0.0 0.0)

    arc 52 53   (0.0 2.5 1.35)
    arc 53 54 (-1.35 2.5 0.0)
    arc 54 55   (0.0 2.5 -1.35)
    arc 55 52     (1.35  2.5 0.0)
    
    arc 56 57   (0.0 22.5 1.35)
    arc 57 58 (-1.35 22.5 0.0)
    arc 58 59   (0.0 22.5 -1.35)
    arc 59 56     (1.35  22.5 0.0)

    arc 60 61   (0.0 40 1.35)
    arc 61 62 (-1.35 40 0.0)
    arc 62 63   (0.0 40 -1.35)
    arc 63 60     (1.35  40 0.0)

   );

   patches
   (
    patch inlet
    (
     (0 3 2 1)

     (0 32 35 3)
     (32 0 1 33)
     (1 2 34 33)
     (3 35 34 2)
    )

    patch outlet
    (
     (12 15 14 13)

     (12 44 47 15)
     (44 12 13 45)
     (13 14 46 45)
     (15 47 46 14)

     (60 63 47 44)
     (63 62 46 47)
     (62 61 45 46)
     (60 61 45 44)

     (60 28 31 63)
     (28 60 61 29)
     (29 61 62 30)
     (30 62 63 31)
    )

    wall walls
    (

     (32 48 51 35)
     (48 32  33 49)
     (49 33 34 50)
     (50 34 35 51)

     (48 16 19 51)
     (16 48  49 17)
     (17 49 50 18)
     (18 50 51 19)

     (17 16 20 21)
     (17 21 22 18)
     (18 22 23 19)
     (19 23 20 16)

     (21 20 24 25)
     (21 25 26 22)
     (22 26 27 23)
     (23 27 24 20)

     (25 24 28 29)
     (25 29 30 26)
     (26 30 31 27)
     (27 31 28 24)

     (37 36 40 41)
     (37 41 42 38)
     (38 42 43 39)
     (39 43 40 36)

     (53 52 56 57)
     (53 57 58 54)
     (54 58 59 55)
     (53 52 36 37)

     (52  55  39  36)
     (55 54 38 39)
     (54 53 37 38)
     (55 59 56 52)

     (57 56 40 41)
     (56  59  43  40)
     (59 58 42 43)
     (58 57 41 42)

    )

);

mergePatchPairs
(
);
