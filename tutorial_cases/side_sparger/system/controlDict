/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application         birdmultiphaseEulerFoam;

startFrom           latestTime;

startTime           0;

stopAt              writeNow;//endTime;

endTime             400;

deltaT              1e-5;

writeControl        adjustableRunTime;

writeInterval       1;

purgeWrite          6;

writeFormat         ascii;

writePrecision      6;

writeCompression    uncompressed;

timeFormat          general;

timePrecision       6;

runTimeModifiable   yes;

adjustTimeStep      yes; //yes; //

maxCo               0.5;

maxDeltaT           1e-3;

functions
{
    #includeFunc    residuals(p_rgh, k.liquid, omega.liquid)
    #includeFunc    timeStep
    #includeFunc    writeObjects(d.gas)
    #includeFunc    writeObjects(thermo:rho.gas)
    #includeFunc    writeObjects(thermo:rho.liquid)
    #includeFunc    writeObjects(thermo:mu.gas)
    #includeFunc    writeObjects(thermo:mu.liquid)
/*    
    #includeFunc    graphUniform
    (
        funcName=graph,
	start=(-0.076 0.9 0),
	end=(0.076 0.9 0),
        nPoints=100,
        fields=
        (
            alpha.gas
        )
    )

    probabilityDensity.injection
    {
        type                sizeDistribution;
        functionObjectLibs  ("libmultiphaseEulerFoamFunctionObjects.so");

        writeControl        outputTime;
        writeInterval       1;

        populationBalance   bubbles;
        regionType          cellZone;
        name                injection;
        functionType        volume;
        coordinateType      diameter;
        densityFunction     yes;
        normalise           yes;
    }

    probabilityDensity.outlet
    {
        type                sizeDistribution;
        functionObjectLibs  ("libmultiphaseEulerFoamFunctionObjects.so");

        writeControl        outputTime;
        writeInterval       1;

        populationBalance   bubbles;
        regionType          cellZone;
        name                outlet;
        functionType        volume;
        coordinateType      diameter;
        densityFunction     yes;
        normalise           yes;
    }
*/
}

// ************************************************************************* //
